"use strict";angular.module("angularTalk",[]).directive("angularTalk",["$http","$timeout","windowStatus",function(e,n,s){return{restrict:"AC",scope:!0,templateUrl:"angularTalk/room.html",link:function(i,t,a){function r(e){if(e.id){if(o(e.id))return;e.id>m&&(m=e.id),(e.id<u||angular.isUndefined(u))&&(u=e.id)}e.$replies=[],e.replyToID?c.push(e):i.messages.push(e),angular.forEach(c,function(e,n){var s=o(e.replyToID);s&&(s.$replies.push(e),c.splice(n,1))}),i.$emit("messageReceived",e)}function o(e,n){var s=!1;return angular.forEach(n||i.messages,function(n){n.id&&n.id==e&&(s=n),!s&&n.$replies&&(s=o(e,n.$replies))}),s}function l(n,t){i.loading=!0,e.get(g.ajaxEndpoint,{params:angular.extend({method:"messages",since:m,dir:"ASC",count:25},n)}).success(function(e){e.data&&(angular.forEach(e.data,r),e.data.length>0&&p&&s.hidden&&p.play(),t&&t(e)),i.loading=!1}).error(function(){i.loading=!1,t&&t(!1)})}function d(){i.settings.updateInterval&&n(function(){l({},d)},i.settings.updateInterval)}var g=i.settings={};if(angular.forEach(a,function(e,n){i.settings[n]=""==e?!0:["strings","sender","soundOnNew"].indexOf(n)>=0?i.$eval(e):e}),!g.ajaxEndpoint)throw new Error("Invalid ajax endpoint");i.messages=[],i.message={};var c=[];i.save=function(n){n.isSending=!0,n.isError=!1,n.isEditing=!1;var s={};angular.forEach(n,function(e,n){"$"!=n[0]&&0!==n.indexOf("is")&&(s[n]=e)}),e.post(g.ajaxEndpoint,s,{params:{method:n.id?"update":"submit"}}).success(function(e){n.isSending=!1,e.data&&(n.isError=!1,angular.extend(n,e.data),i.$emit("messageSend",n))}).error(function(){n.isSending=!1,n.isError=!0}),i.content=""},i.submit=function(){var e=angular.extend(i.message,{author:g.sender,date:new Date/1e3|0});r(e),i.save(e),i.message={}},i.current={},i.messageKeyPress=function(e){return g.submitOnEnter&&13==e.keyCode?(i.submit(),e.preventDefault(),!1):void(27==e.keyCode&&(i.cancelEdit(i.current.message),i.current.message=null))},i.reply=function(e){e.$replies.push({author:g.sender,isEditing:!0,content:"",date:new Date/1e3|0,replyToID:e.id})},i.edit=function(e){e.isEditing=!0,e.originalContent=e.content},i.cancelEdit=function(e){e.isEditing=!1,e.content=e.originalContent,e.id||i.delete(e)},i.delete=function(n){function s(){function e(n,s){var i=s.indexOf(n);i>=0&&s.splice(i,1),angular.forEach(s,function(s){s.$replies&&e(n,s.$replies)})}e(n,i.messages)}n.id?confirm(g.strings.delete_confirm)&&e.post(g.ajaxEndpoint,n,{params:{method:"delete"}}).success(s):s()},i.previousMessage=function(e){var n=void 0;return angular.forEach(i.messages,function(s){s.replyToID==e.replyToID&&s.id!=e.id&&s.date<=e.date&&(!n||n.date<s.date)&&(n=s)}),n};var u,m=0,p=null;g.soundOnNew&&(angular.isString(g.soundOnNew)?p=new Audio(g.soundOnNew):(p=document.createElement("audio"),angular.forEach(g.soundOnNew,function(e,n){var s=document.createElement("source");s.type=n,s.src=e,p.appendChild(s)}))),i.loadingOlder=!1,i.disableOlder=!1,i.onScroll=function(e){i.disableOlder||0!=e||(console.log("Load old messages"),i.loadingOlder=!0,l({since:u,dir:"DESC"},function(e){0==e.data.length&&(i.disableOlder=!0),i.loadingOlder=!1}))},l({},d,!0),i.$on("$destroy",function(){i.settings.updateInterval=!1})}}}]).directive("angularTalkScroll",function(){return{priority:1,scope:{onScroll:"&"},restrict:"A",link:function(e,n){function s(){t.scrollTop=t.scrollHeight}function i(){return t.scrollTop+t.clientHeight+1>=t.scrollHeight}var t=n[0],a=!0;e.$watch(function(){a&&s()}),n.bind("scroll",function(){a=i(),e.onScroll({offset:t.scrollTop})})}}}).directive("init",function(){return{priority:0,compile:function(){return{pre:function(e,n,s){e.$eval(s.init)}}}}}).service("windowStatus",function(){function e(e){var i={focus:!0,focusin:!0,pageshow:!0,blur:!1,focusout:!1,pagehide:!1};e=e||window.event,n.visible=e.type in i?i[e.type]:this[s]?!1:!0,n.hidden=!n.visible}var n={visible:!0,hidden:!1},s="hidden";return s in document?document.addEventListener("visibilitychange",e):(s="mozHidden")in document?document.addEventListener("mozvisibilitychange",e):(s="webkitHidden")in document?document.addEventListener("webkitvisibilitychange",e):(s="msHidden")in document?document.addEventListener("msvisibilitychange",e):"onfocusin"in document?document.onfocusin=document.onfocusout=e:window.onpageshow=window.onpagehide=window.onfocus=window.onblur=e,void 0!==document[s]&&e({type:document[s]?"blur":"focus"}),n}).run(["windowStatus",function(){}]),angular.module("angularTalk").run(["$templateCache",function(e){e.put("angularTalk/messages.html",'<div\nng-repeat-start="message in messages | orderBy:\'+date\' track by message.id || $id(message)"\nclass="moment"\nng-show="settings.groupMessages && ($index==0 || (message.date - previousMessage(message).date)>30000)">\n<time\nclass="relative" datetime="{{ ::message.date*1000 | date:\'yyyy-MM-dd HH:mm:ss Z\' }}">{{ ::message.date*1000 | date:\'medium\' }}</time></div><div\nng-repeat-end class="message" ng-class="{\n\'from-sender\': message.author.id==settings.sender.id,\nreversed:settings.reverseSenderMessages && message.author.id==settings.sender.id,\nactive:message.isActive,\nerror:message.isError}" ng-click="message.isActive=!message.isActive">\n<a\nng-show="settings.showFaces" class="message-img" ng-href="{{::message.author.href}}" title="{{::message.author.name}}">\n<img\nng-src="{{::message.author.icon}}" alt="{{::message.author.name}}">\n</a><div\nclass="message-wrapper"><div\nclass="message-body" title="{{ ::message.date*1000 | date:\'medium\' }}"><div\nng-hide="message.isEditing">\n{{ message.content }}<div\nclass="message-info" ng-show="!settings.groupMessages || message.isActive || message.isSending || message.isError">\n<span\nng-show="message.isError">\n<a\nclass="retry-send" ng-click="save(message)">\n<i\nclass="icon icon-warning fa fa-warning"></i>\n{{ ::settings.strings.retrySend }}\n</a>\n<span\nclass="bullet">•</span>\n</span>\n<span\nng-show="message.isSending">\n<span\nclass="loader icon icon-circle-o-notch icon-spin fa fa-circle-o-notch fa-spin"></span>\n<span\nclass="bullet">•</span>\n</span>\n<span\nng-show="::settings.showUserName">\n<a\nclass="author" ng-href="{{ ::message.author.href }}">\n{{ ::message.author.name }}\n</a>\n<span\nclass="bullet">•</span>\n</span>\n<span\nng-show="::replyLevel < settings.replyLevels-1 && settings.allowReplies && message.id && !settings.readOnly">\n<a\nclass="reply" ng-click="reply(message)">\n<i\nclass="icon icon-reply fa fa-reply"></i>\n{{ ::settings.strings.reply }}\n</a>\n<span\nclass="bullet">•</span>\n</span>\n<span\nng-show="::settings.sender.isModerator || message.author.id == settings.sender.id">\n<a\nclass="edit" ng-click="edit(message)">\n<i\nclass="icon icon-edit fa fa-edit"></i>\n{{ ::settings.strings.edit }}\n</a>\n<span\nclass="bullet">•</span>\n<a\nclass="delete" ng-click="delete(message)">\n<i\nclass="icon icon-remove fa fa-remove"></i>\n{{ ::settings.strings.delete }}\n</a>\n<span\nclass="bullet">•</span>\n</span>\n<time\nclass="relative" datetime="{{::message.date*1000 | date:\'yyyy-MM-dd HH:mm:ss Z\'}}">{{::message.date*1000 | date:\'medium\'}}</time></div></div><div\nng-if="message.isEditing"><textarea ng-model="message.content"\n                       ng-keyup="messageKeyPress($event)"\n                       ng-focus="current.message = message"\n                       placeholder="{{ ::settings.strings.messagePlaceholder }}"></textarea><div\nclass="tools">\n<a\nng-click="cancelEdit(message)">{{ ::settings.strings.cancel }}</a><button\ntype="button" class="submit" ng-click="save(message)" ng-disabled="!message.content">\n{{ message.id ? settings.strings.save : settings.strings.submit }}\n</button></div></div></div>\n<ng-include\nng-if="message.$replies.length>0 && settings.allowReplies && replyLevel < settings.replyLevels-1"\nsrc="\'angularTalk/messages.html\'"\ninit="messages = message.$replies; replyLevel = replyLevel+1"></ng-include></div></div>'),e.put("angularTalk/room.html",'<div\nclass="messages" angular-talk-scroll ng-class="{faces:settings.showFaces}" on-scroll="onScroll(offset)"><div\nclass="main-loader" ng-show="loadingOlder">\n<span\nclass="loader icon icon-circle-o-notch icon-spin fa fa-circle-o-notch fa-spin"></span></div><div\nclass="empty-room" ng-show="messages.length==0">{{ ::settings.strings.emptyRoom }}</div>\n<ng-include\nsrc="\'angularTalk/messages.html\'" init="messages = messages; replyLevel = 0"></ng-include></div><div\nclass="footer" ng-if="!settings.readOnly"><textarea ng-model="message.content"\n              ng-keyup="messageKeyPress($event)"\n              rows="3" cols="1"\n              placeholder="{{ ::settings.strings.messagePlaceholder }}"></textarea><div\nstyle="text-align: right">\n<button\ntype="button" class="submit" ng-click="submit(message)" ng-disabled="!message.content">\n{{message.id ? settings.strings.save : settings.strings.submit}}\n</button></div></div>')}]);