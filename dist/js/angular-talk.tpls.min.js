"use strict";angular.module("angularTalk",[]).directive("angularTalk",["$http","$timeout","windowStatus",function(e,n,s){return{restrict:"AC",scope:!0,templateUrl:"angularTalk/room.html",link:function(a,i,t){function r(e,n){var s=!1;return angular.forEach(n||a.messages,function(n){n.id&&n.id==e&&(s=n),!s&&n.$replies&&(s=r(e,n.$replies))}),s}function o(e){if(e.id){if(r(e.id))return;e.id>c&&(c=e.id),(e.id<g||angular.isUndefined(g))&&(g=e.id)}if(e.$replies=[],e.replyToID){var n=r(e.replyToID);n&&n.$replies.push(e)}else a.messages.push(e);a.$emit("messageReceived",e)}function l(n,i){a.loading=!0,e.get(d.ajaxEndpoint,{params:angular.extend({method:"messages",since:c,dir:"ASC",count:25},n)}).success(function(e){e.data&&(angular.forEach(e.data,o),e.data.length>0&&u&&s.hidden&&u.play(),i&&i(e)),a.loading=!1}).error(function(){a.loading=!1,i&&i(!1)})}var d=a.settings={};if(angular.forEach(t,function(e,n){a.settings[n]=""==e?!0:["strings","sender","soundOnNew"].indexOf(n)>=0?a.$eval(e):e}),!d.ajaxEndpoint)throw new Error("Invalid ajax endpoint");a.messages=[],a.message={},a.save=function(n){n.isSending=!0,n.isError=!1,n.isEditing=!1;var s={};angular.forEach(n,function(e,n){"$"!=n[0]&&0!==n.indexOf("is")&&(s[n]=e)}),e.post(d.ajaxEndpoint,s,{params:{method:n.id?"update":"submit"}}).success(function(e){n.isSending=!1,e.data&&(n.isError=!1,angular.extend(n,e.data),a.$emit("messageSend",n))}).error(function(){n.isSending=!1,n.isError=!0}),a.content=""},a.submit=function(e){e=angular.extend(e,{author:d.sender,date:new Date/1e3|0}),a.messages.push(e),a.save(e),a.message={}},a.messageKeyPress=function(e){return d.submitOnEnter&&13==e.keyCode?(a.submit(),e.preventDefault(),!1):void 0},a.reply=function(e){e.$replies.push({author:d.sender,isEditing:!0,content:"",date:new Date/1e3|0,replyToID:e.id})},a.edit=function(e){e.isEditing=!0},a.delete=function(n){confirm(d.strings.delete_confirm)&&e.post(d.ajaxEndpoint,n,{params:{method:"delete"}}).success(function(){var e=a.messages.indexOf(n);e>=0&&a.messages.splice(e,1)})},a.previousMessage=function(e){var n=void 0;return angular.forEach(a.messages,function(s){s.replyToID==e.replyToID&&s.id!=e.id&&s.date<=e.date&&(!n||n.date<s.date)&&(n=s)}),n};var g,c=0,u=null;d.soundOnNew&&(angular.isString(d.soundOnNew)?u=new Audio(d.soundOnNew):(u=document.createElement("audio"),angular.forEach(d.soundOnNew,function(e,n){var s=document.createElement("source");s.type=n,s.src=e,u.appendChild(s)}))),a.loadingOlder=!1,a.disableOlder=!1,a.onScroll=function(e){a.disableOlder||0!=e||(console.log("Load old messages"),a.loadingOlder=!0,l({since:g,dir:"DESC"},function(e){0==e.data.length&&(a.disableOlder=!0),a.loadingOlder=!1}))};var m=function p(){a.settings.updateInterval&&n(function(){l({},p)},a.settings.updateInterval)};l({},m,!0),a.$on("$destroy",function(){a.settings.updateInterval=!1})}}}]).directive("angularTalkScroll",function(){return{priority:1,scope:{onScroll:"&"},restrict:"A",link:function(e,n){function s(){i.scrollTop=i.scrollHeight}function a(){return i.scrollTop+i.clientHeight+1>=i.scrollHeight}var i=n[0],t=!0;e.$watch(function(){t&&s()}),n.bind("scroll",function(){t=a(),e.onScroll({offset:i.scrollTop})})}}}).directive("init",function(){return{priority:0,compile:function(){return{pre:function(e,n,s){e.$eval(s.init)}}}}}).service("windowStatus",function(){function e(e){var a={focus:!0,focusin:!0,pageshow:!0,blur:!1,focusout:!1,pagehide:!1};e=e||window.event,n.visible=e.type in a?a[e.type]:this[s]?!1:!0,n.hidden=!n.visible}var n={visible:!0,hidden:!1},s="hidden";return s in document?document.addEventListener("visibilitychange",e):(s="mozHidden")in document?document.addEventListener("mozvisibilitychange",e):(s="webkitHidden")in document?document.addEventListener("webkitvisibilitychange",e):(s="msHidden")in document?document.addEventListener("msvisibilitychange",e):"onfocusin"in document?document.onfocusin=document.onfocusout=e:window.onpageshow=window.onpagehide=window.onfocus=window.onblur=e,void 0!==document[s]&&e({type:document[s]?"blur":"focus"}),n}).run(["windowStatus",function(){}]),angular.module("angularTalk").run(["$templateCache",function(e){e.put("angularTalk/messages.html",'<div\nng-repeat-start="message in messages | orderBy:\'+date\' track by message.id || $id(message)"\nclass="moment"\nng-show="settings.groupMessages && ($index==0 || (message.date - previousMessage(message).date)>30000)">\n<time\nclass="relative" datetime="{{ ::message.date*1000 | date:\'yyyy-MM-dd HH:mm:ss Z\' }}">{{ ::message.date*1000 | date:\'medium\' }}</time></div><div\nng-repeat-end class="message" ng-class="{\n\'from-sender\': message.author.id==settings.sender.id,\nreversed:settings.reverseSenderMessages && message.author.id==settings.sender.id,\nactive:message.isActive,\nerror:message.isError}" ng-click="message.isActive=!message.isActive">\n<a\nng-show="settings.showFaces" class="message-img" ng-href="{{::message.author.href}}" title="{{::message.author.name}}">\n<img\nng-src="{{::message.author.icon}}" alt="{{::message.author.name}}">\n</a><div\nclass="message-wrapper"><div\nclass="message-body" title="{{ ::message.date*1000 | date:\'medium\' }}"><div\nng-hide="message.isEditing">\n{{ message.content }}<div\nclass="message-info" ng-show="!settings.groupMessages || message.isActive || message.isSending || message.isError">\n<span\nng-show="message.isError">\n<a\nclass="retry-send" ng-click="save(message)">\n<i\nclass="icon icon-warning fa fa-warning"></i>\n{{ ::settings.strings.retrySend }}\n</a>\n<span\nclass="bullet">•</span>\n</span>\n<span\nng-show="message.isSending">\n<span\nclass="loader icon icon-circle-o-notch icon-spin fa fa-circle-o-notch fa-spin"></span>\n<span\nclass="bullet">•</span>\n</span>\n<span\nng-show="::settings.showUserName">\n<a\nclass="author" ng-href="{{ ::message.author.href }}">\n{{ ::message.author.name }}\n</a>\n<span\nclass="bullet">•</span>\n</span>\n<span\nng-show="::replyLevel < settings.replyLevels-1 && settings.allowReplies && message.id">\n<a\nclass="reply" ng-click="reply(message)">\n<i\nclass="icon icon-reply fa fa-reply"></i>\n{{ ::settings.strings.reply }}\n</a>\n<span\nclass="bullet">•</span>\n</span>\n<span\nng-show="::settings.sender.isModerator || message.author.id == settings.sender.id">\n<a\nclass="edit" ng-click="edit(message)">\n<i\nclass="icon icon-edit fa fa-edit"></i>\n{{::settings.strings.edit}}\n</a>\n<span\nclass="bullet">•</span>\n<a\nclass="delete" ng-click="delete(message)">\n<i\nclass="icon icon-remove fa fa-remove"></i>\n{{::settings.strings.delete}}\n</a>\n<span\nclass="bullet">•</span>\n</span>\n<time\nclass="relative" datetime="{{::message.date*1000 | date:\'yyyy-MM-dd HH:mm:ss Z\'}}">{{::message.date*1000 | date:\'medium\'}}</time></div></div><div\nng-show="message.isEditing"><textarea ng-model="message.content"\n                       ng-keypress="messageKeyPress($event)"\n                       rows="3" cols="1"\n                       placeholder="{{ ::settings.strings.messagePlaceholder }}"></textarea><div\nstyle="text-align: right">\n<button\ntype="button" class="submit" ng-click="save(message)" ng-disabled="!message.content">\n{{message.id ? settings.strings.save : settings.strings.submit}}\n</button></div></div></div>\n<ng-include\nng-if="message.$replies.length>0 && settings.allowReplies && replyLevel < settings.replyLevels-1"\nsrc="\'angularTalk/messages.html\'"\ninit="messages = message.$replies; replyLevel = replyLevel+1"></ng-include></div></div>'),e.put("angularTalk/room.html",'<div\nclass="messages" angular-talk-scroll ng-class="{faces:settings.showFaces}" on-scroll="onScroll(offset)"><div\nclass="main-loader" ng-show="loadingOlder">\n<span\nclass="loader icon icon-circle-o-notch icon-spin fa fa-circle-o-notch fa-spin"></span></div><ng-include\nsrc="\'angularTalk/messages.html\'" init="messages = messages; replyLevel = 0"></ng-include></div><div\nclass="footer"><textarea ng-model="message.content"\n              ng-keypress="messageKeyPress($event)"\n              rows="3" cols="1"\n              placeholder="{{ ::settings.strings.messagePlaceholder }}"></textarea><div\nstyle="text-align: right">\n<button\ntype="button" class="submit" ng-click="submit(message)" ng-disabled="!message.content">\n{{message.id ? settings.strings.save : settings.strings.submit}}\n</button></div></div>')}]);