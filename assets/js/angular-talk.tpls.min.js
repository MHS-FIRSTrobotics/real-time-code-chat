"use strict";angular.module("angular-talk",[]).directive("angularTalk",["$http","$timeout","windowStatus",function(e,n,s){return{restrict:"AC",scope:{},templateUrl:"angularTalk/room.html",link:function(a,i,t){var o=a.settings={};if(angular.forEach(t,function(e,n){a.settings[n]=""==e?!0:["strings","sender","soundOnNew"].indexOf(n)>=0?a.$eval(e):e}),!o.ajaxEndpoint)throw new Error("Invalid ajax endpoint");a.messages=[],a.getMessageID=function(e){return o.channel+"_"+e.id},a.submit=function(){if(""!=a.content.length){var e;a.editingMessage?(e=a.editingMessage,e.content=a.content,a.editingMessage=null):(e={author:o.sender,content:a.content,date:new Date/1e3|0},a.replyingTo&&(e.replyToID=a.replyingTo.id),a.messages.push(e)),a.sendMessage(e),a.content="",a.replyingTo=null}},a.sendMessage=function(n){n.isSending=!0,n.isError=!1,e.post(o.ajaxEndpoint,n,{params:{method:n.id?"update":"submit"}}).success(function(e){n.isSending=!1,e.data&&(n.isError=!1,angular.extend(n,e.data),a.$emit("messageSend",n))}).error(function(){n.isSending=!1,n.isError=!0})},a.messageKeyPress=function(e){return o.submitOnEnter&&13==e.keyCode?(a.submit(),e.preventDefault(),!1):void 0},a.replyingTo=null,a.reply=function(e){a.replyingTo=e},a.getReplies=function(e){var n=[];return angular.forEach(a.messages,function(s){s.replyToID==e&&n.push(s)}),n},a.editingMessage=null,a.edit=function(e){a.editingMessage=e,a.content=e.content},a.delete=function(n){confirm(o.strings.delete_confirm)&&e.post(o.ajaxEndpoint,n,{params:{method:"delete"}}).success(function(){var e=a.messages.indexOf(n);e>=0&&a.messages.splice(e,1)})},a.previousMessage=function(e){var n=void 0;return angular.forEach(a.messages,function(s){s.replyToID==e.replyToID&&s.id!=e.id&&s.date<=e.date&&(!n||n.date<s.date)&&(n=s)}),n};var l,r=0,d=null;o.soundOnNew&&(angular.isString(o.soundOnNew)?d=new Audio(o.soundOnNew):(d=document.createElement("audio"),angular.forEach(o.soundOnNew,function(e,n){var s=document.createElement("source");s.type=n,s.src=e,d.appendChild(s)})));var g=function(n,i){a.loading=!0,e.get(o.ajaxEndpoint,{params:angular.extend({method:"messages",since:r,dir:"ASC",count:25},n)}).success(function(e){if(e.data){var n=0;angular.forEach(e.data,function(e){var s=!1;angular.forEach(a.messages,function(n){n.id&&n.id==e.id&&(s=!0)}),s||(e.id>r&&(r=e.id),(e.id<l||angular.isUndefined(l))&&(l=e.id),a.messages.push(e),n++,a.$emit("messageReceived",e))}),n>0&&d&&s.hidden&&d.play(),i&&i(e)}a.loading=!1}).error(function(){a.loading=!1,i&&i(!1)})};a.loadingOlder=!1,a.disableOlder=!1,a.onScroll=function(e){a.disableOlder||0!=e||(console.log("Load old messages"),a.loadingOlder=!0,g({since:l,dir:"DESC"},function(e){0==e.data.length&&(a.disableOlder=!0),a.loadingOlder=!1}))};var c=function u(){a.settings.updateInterval&&n(function(){g({},u)},a.settings.updateInterval)};g({},c),a.$on("$destroy",function(){a.settings.updateInterval=!1})}}}]).directive("angularTalkScroll",function(){return{priority:1,scope:{onScroll:"&"},restrict:"A",link:function(e,n){function s(){i.scrollTop=i.scrollHeight}function a(){return i.scrollTop+i.clientHeight+1>=i.scrollHeight}var i=n[0],t=!0;e.show=function(n){var s=document.getElementById(e.getMessageID(n));s&&(i.scrollTop=s.offsetTop)},e.$watch(function(){t&&s()}),n.bind("scroll",function(){t=a(),e.onScroll({offset:i.scrollTop})})}}}).service("windowStatus",function(){function e(e){var a={focus:!0,focusin:!0,pageshow:!0,blur:!1,focusout:!1,pagehide:!1};e=e||window.event,n.visible=e.type in a?a[e.type]:this[s]?!1:!0,n.hidden=!n.visible}var n={visible:!0,hidden:!1},s="hidden";return s in document?document.addEventListener("visibilitychange",e):(s="mozHidden")in document?document.addEventListener("mozvisibilitychange",e):(s="webkitHidden")in document?document.addEventListener("webkitvisibilitychange",e):(s="msHidden")in document?document.addEventListener("msvisibilitychange",e):"onfocusin"in document?document.onfocusin=document.onfocusout=e:window.onpageshow=window.onpagehide=window.onfocus=window.onblur=e,void 0!==document[s]&&e({type:document[s]?"blur":"focus"}),n}).run(["windowStatus",function(){}]),angular.module("angular-talk").run(["$templateCache",function(e){e.put("angularTalk/messages.html",'<div\nng-repeat-start="message in (listingMessages = (filteredMessages || (settings.allowReplies ? getReplies(0) : messages)) | orderBy:\'+date\')"\nclass="moment"\nng-show="settings.groupMessages && ($index==0 || (message.date - previousMessage(message).date)>30000)">\n<time\nclass="relative" datetime="{{::message.date*1000 | date:\'yyyy-MM-dd HH:mm:ss Z\'}}">{{::message.date*1000 | date:\'medium\'}}</time></div><div\nng-repeat-end class="message" id="{{getMessageID(message)}}" ng-class="{\n\'from-sender\': message.author.id==settings.sender.id,\nreversed:settings.reverseSenderMessages && message.author.id==settings.sender.id,\nactive:message.isActive,\nerror:message.isError}" ng-click="message.isActive=!message.isActive">\n<a\nng-show="settings.showFaces" class="message-img" ng-href="{{::message.author.href}}" title="{{::message.author.name}}">\n<img\nng-src="{{::message.author.icon}}" alt="{{::message.author.name}}">\n</a><div\nclass="message-wrapper"><div\nclass="message-body" title="{{::message.date*1000 | date:\'medium\'}}">\n{{message.content}}<div\nclass="message-info" ng-show="!settings.groupMessages || message.isActive || message.isSending || message.isError">\n<span\nng-show="message.isError">\n<a\nclass="retry-send" ng-click="sendMessage(message)">\n<i\nclass="icon icon-warning fa fa-warning"></i>\n{{::settings.strings.retrySend}}\n</a>\n<span\nclass="bullet">•</span>\n</span>\n<span\nng-show="message.isSending">\n<span\nclass="loader icon icon-circle-o-notch icon-spin fa fa-circle-o-notch fa-spin"></span>\n<span\nclass="bullet">•</span>\n</span>\n<span\nng-show="settings.showUserName">\n<a\nclass="author" ng-href="{{::message.author.href}}">\n{{::message.author.name}}\n</a>\n<span\nclass="bullet">•</span>\n</span>\n<span\nng-show="replyLevel < settings.replyLevels-1 && settings.allowReplies && message.id">\n<a\nclass="reply" ng-click="reply(message)">\n<i\nclass="icon icon-reply fa fa-reply"></i>\n{{::settings.strings.reply}}\n</a>\n<span\nclass="bullet">•</span>\n</span>\n<span\nng-show="settings.sender.isModerator">\n<a\nclass="edit" ng-click="edit(message)">\n<i\nclass="icon icon-edit fa fa-edit"></i>\n{{::settings.strings.edit}}\n</a>\n<span\nclass="bullet">•</span>\n<a\nclass="delete" ng-click="delete(message)">\n<i\nclass="icon icon-remove fa fa-remove"></i>\n{{::settings.strings.delete}}\n</a>\n<span\nclass="bullet">•</span>\n</span>\n<time\nclass="relative" datetime="{{::message.date*1000 | date:\'yyyy-MM-dd HH:mm:ss Z\'}}">{{::message.date*1000 | date:\'medium\'}}</time></div></div>\n<ng-include\nng-if="settings.allowReplies && replyLevel < settings.replyLevels-1 && (filteredMessages = getReplies(message.id)).length>0"\nsrc="\'angularTalk/messages.html\'"\nng-init="replyLevel=replyLevel+1"></ng-include></div></div>'),e.put("angularTalk/room.html",'<div\nclass="heading"></div><div\nclass="messages" angular-talk-scroll ng-class="{faces:settings.showFaces}" on-scroll="onScroll(offset)"><div\nclass="main-loader" ng-show="loadingOlder">\n<span\nclass="loader icon icon-circle-o-notch icon-spin fa fa-circle-o-notch fa-spin"></span></div><ng-include\nsrc="\'angularTalk/messages.html\'" ng-init="replyLevel=0"></ng-include></div><div\nclass="footer"><div\nclass="reply-to" ng-show="replyingTo">\n{{::settings.strings.inReplyTo}} <a\nng-click="show(replyingTo)">{{replyingTo.author.name}}</a>\n<a\nclass="cancel" ng-click="replyingTo=null">&times;</a></div><textarea\n                        ng-model="content"\n                        ng-keypress="messageKeyPress($event)"\n                        rows="3" cols="1"\n                        placeholder="{{::settings.strings.messagePlaceholder}}"></textarea><div\nstyle="text-align: right">\n<button\ntype="button" class="submit" ng-click="submit()" ng-disabled="!content">{{editingMessage ? settings.strings.save : settings.strings.submit}}\n</button></div></div>')}]);